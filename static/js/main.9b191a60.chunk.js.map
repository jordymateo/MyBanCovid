{"version":3,"sources":["store/actions.js","config.js","App/layout/Loader/index.js","hoc/_Aux/index.js","services/authService.ts","App/layout/ScrollToTop/index.js","App/Index.tsx","serviceWorker.js","store/reducer.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","COLLAPSE_MENU","COLLAPSE_TOGGLE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE","defaultPath","basename","layout","preLayout","collapseMenu","layoutType","navIconColor","headerBackColor","navBackColor","navBrandColor","navBackImage","rtlLayout","navFixedLayout","headerFixedLayout","boxLayout","navDropdownIcon","navListIcon","navActiveListColor","navListTitleColor","navListTitleHide","configBlock","layout6Background","layout6BackSize","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","loader","a","createElement","className","Aux","props","children","axios__WEBPACK_IMPORTED_MODULE_0__","axios__WEBPACK_IMPORTED_MODULE_0___default","authService","storageData","localStorage","getItem","isAuthenticated","userData","JSON","parse","signIn","model","_this","this","Promise","resolve","reject","axios","post","concat","process","then","res","data","setItem","stringify","catch","err","signOut","removeItem","window","location","reload","ScrollToTop","prevProps","scrollTo","React","Component","withRouter","SignIn","lazy","e","bind","AdminLayout","Loadable","all","loading","Loader","GuestRoutes","react_default","react_router","exact","path","component","to","App","_Aux","layout_ScrollToTop","react","fallback","render","_","Fragment","Boolean","hostname","match","initialState","Object","objectSpread","isOpen","isTrigger","config","isFullScreen","reducer","state","arguments","length","undefined","action","trigger","open","type","actionTypes","menu","triggerIndex","indexOf","id","filter","item","toConsumableArray","store","createStore","app","es","react_router_dom","Index","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b191a60.chunk.js","sourcesContent":["export const COLLAPSE_MENU = 'COLLAPSE_MENU';\r\nexport const COLLAPSE_TOGGLE = 'COLLAPSE_TOGGLE';\r\nexport const FULL_SCREEN = 'FULL_SCREEN';\r\nexport const FULL_SCREEN_EXIT = 'FULL_SCREEN_EXIT';\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const NAV_CONTENT_LEAVE = 'NAV_CONTENT_LEAVE';\r\nexport const NAV_COLLAPSE_LEAVE = 'NAV_COLLAPSE_LEAVE';","export default {\r\n    defaultPath: '/cuentas',\r\n    basename: '', // only at build time to set, like /datta-able\r\n    layout: 'vertical', // vertical, horizontal (not available in lite version)\r\n    preLayout: null, // (not available in lite version)\r\n    collapseMenu: false, // mini-menu\r\n    layoutType: 'menu-light', // menu-dark, (menu-light, dark are not available in lite version)\r\n    navIconColor: false,\r\n    headerBackColor: 'header-default', // header-default, (header-blue, header-red, header-purple, header-lightblue, header-dark are not available in lite version)\r\n    navBackColor: 'navbar-default', // navbar-default, (navbar-blue, navbar-red, navbar-purple, navbar-lightblue, navbar-dark are not available in lite version)\r\n    navBrandColor: 'brand-default', // brand-default, (brand-blue, brand-red, brand-purple, brand-lightblue, brand-dark are not available in lite version)\r\n    navBackImage: false, // not available in lite version\r\n    rtlLayout: false, // not available in lite version\r\n    navFixedLayout: true,\r\n    headerFixedLayout: false, // not available in lite version\r\n    boxLayout: false,\r\n    navDropdownIcon: 'style1', // style1, (style2, style3 are not available in lite version)\r\n    navListIcon: 'style1', // style1, (style2, style3, style4, style5, style6 are not available in lite version)\r\n    navActiveListColor: 'active-default', // active-default, (active-blue, active-red, active-purple, active-lightblue, active-dark are not available in lite version)\r\n    navListTitleColor: 'title-default', // title-default, (title-blue, title-red, title-purple, title-lightblue, title-dark are not available in lite version)\r\n    navListTitleHide: false, // not available in lite version\r\n    configBlock: false, // not available in lite version\r\n    layout6Background : 'linear-gradient(to right, #A445B2 0%, #D41872 52%, #FF0066 100%)', // used only for pre-layout = layout-6\r\n    layout6BackSize : '', // used only for pre-layout = layout-6\r\n};\r\n","import React from 'react';\r\n\r\nconst loader = () => {\r\n    return (\r\n        <div className=\"loader-bg\">\r\n            <div className=\"loader-track\">\r\n                <div className=\"loader-fill\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default loader;","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","import { AuthModel, UserModel } from \"../models/UserModel\";\r\nimport axios from 'axios';\r\n\r\nconst authService = (() => {\r\n    var storageData = localStorage.getItem('current_user');\r\n    var isAuthenticated = !!storageData;\r\n    var userData: AuthModel = {} as AuthModel;\r\n\r\n    if (storageData)\r\n        userData = JSON.parse(storageData);\r\n\r\n    return {\r\n        userData,\r\n        isAuthenticated,\r\n        signIn(model: UserModel): Promise<any> {\r\n            return new Promise<any>((resolve, reject) => {\r\n                axios.post(`${process.env.REACT_APP_API_URL}/api/usuarios/iniciarsesion`, model)\r\n                    .then((res: any) => {\r\n                        this.isAuthenticated = true;\r\n                        this.userData = res.data;\r\n                        localStorage.setItem('current_user', JSON.stringify(res.data));\r\n                        resolve(res);\r\n                    })\r\n                    .catch((err: any) => {\r\n                        reject(err)\r\n                    });\r\n            });\r\n        },\r\n        signOut() {\r\n            isAuthenticated = false;\r\n            userData = {} as AuthModel;\r\n            localStorage.removeItem('current_user');\r\n            window.location.reload(false);\r\n        }\r\n    }\r\n})();\r\n\r\nexport default authService;","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            window.scrollTo(0, 0)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React, { Component, Suspense, useState } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport Loadable from 'react-loadable';\r\n\r\nimport '../../node_modules/font-awesome/scss/font-awesome.scss';\r\n\r\nimport Loader from './layout/Loader'\r\nimport Aux from \"../hoc/_Aux\";\r\nimport ScrollToTop from './layout/ScrollToTop';\r\nimport routes from \"../routes\";\r\nimport authService from \"../services/authService\";\r\n\r\nconst SignIn = React.lazy(() => import('../pages/Authentication/SignIn/SignIn'));\r\n\r\nconst AdminLayout = Loadable({\r\n    loader: () => import('./layout/AdminLayout'),\r\n    loading: Loader\r\n});\r\n\r\n\r\nconst GuestRoutes = () => {\r\n    return (\r\n        <Switch>\r\n            <Route exact path={'/auth/sign_in'} component={SignIn} />\r\n            <Redirect to=\"/auth/sign_in\" />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nconst App = () => {\r\n    return (\r\n        <Aux>\r\n            <ScrollToTop>\r\n                <Suspense fallback={<Loader />}>\r\n                    <Switch>\r\n                        <Route\r\n                            render={_ =>\r\n                                authService.isAuthenticated ? (\r\n                                    <>\r\n                                        <Switch>\r\n                                            <Route path=\"/\" component={AdminLayout} />\r\n                                        </Switch>\r\n                                    </>\r\n                                ) : (\r\n                                        <Route path=\"*\" component={GuestRoutes} />\r\n                                    )\r\n                            }\r\n                        />\r\n                    </Switch>\r\n                </Suspense>\r\n            </ScrollToTop>\r\n        </Aux>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions';\r\nimport config from './../config';\r\n\r\nconst initialState = {\r\n    isOpen: [], //for active default menu\r\n    isTrigger: [], //for active default menu, set blank for horizontal\r\n    ...config,\r\n    isFullScreen: false, // static can't change\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let trigger = [];\r\n    let open = [];\r\n\r\n    switch (action.type) {\r\n        case actionTypes.COLLAPSE_MENU:\r\n            return {\r\n                ...state,\r\n                collapseMenu: !state.collapseMenu\r\n            };\r\n        case actionTypes.COLLAPSE_TOGGLE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n\r\n                if (triggerIndex === -1) {\r\n                    open = [...open, action.menu.id];\r\n                    trigger = [...trigger, action.menu.id];\r\n                }\r\n            } else {\r\n                open = state.isOpen;\r\n                const triggerIndex = (state.isTrigger).indexOf(action.menu.id);\r\n                trigger = (triggerIndex === -1) ? [action.menu.id] : [];\r\n                open = (triggerIndex === -1) ? [action.menu.id] : [];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger\r\n            };\r\n        case actionTypes.NAV_CONTENT_LEAVE:\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger,\r\n            };\r\n        case actionTypes.NAV_COLLAPSE_LEAVE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n                return {\r\n                    ...state,\r\n                    isOpen: open,\r\n                    isTrigger: trigger,\r\n                };\r\n            }\r\n            return {...state};\r\n        case actionTypes.FULL_SCREEN :\r\n            return {\r\n                ...state,\r\n                isFullScreen: !state.isFullScreen\r\n            };\r\n        case actionTypes.FULL_SCREEN_EXIT:\r\n            return {\r\n                ...state,\r\n                isFullScreen: false\r\n            };\r\n        case actionTypes.CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layout: action.layout\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport App from './App/Index';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\nimport config from './config';\n\nconst store = createStore(reducer);\n\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename={config.basename}>\n            {/* basename=\"/datta-able\" */}\n            <App />\n        </BrowserRouter>\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}