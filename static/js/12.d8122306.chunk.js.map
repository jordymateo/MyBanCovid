{"version":3,"sources":["pages/Transferencias/Expreso.tsx"],"names":["Expreso","history","useHistory","id","useRouteMatch","params","_useState","useState","_useState2","Object","D_Projects_Personal_P3_MyBanCovid_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__","agree","setAgree","_useState3","_useState4","errors","setErrors","_useState5","_useState6","loading","setLoading","_useState7","_useState8","comprobanteActivado","setComprobanteActivado","_useState9","_useState10","miCuenta","setMiCuenta","_useState11","_useState12","cuentaDestino","setCuentaDestino","_useState13","Monto","CuentaDestino","Cuenta","_useState14","formModel","setFormModel","useEffect","cuentasService","obtener","then","data","catch","push","handleInputChange","_ref","target","prev","D_Projects_Personal_P3_MyBanCovid_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","D_Projects_Personal_P3_MyBanCovid_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","value","onSubmit","_ref2","D_Projects_Personal_P3_MyBanCovid_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_Projects_Personal_P3_MyBanCovid_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","e","errorsList","wrap","_context","next","preventDefault","NoCuenta","concat","moneyFormat","parseFloat","toString","setTimeout","length","stop","_x","apply","this","arguments","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","Fragment","_App_components_Breadcrumb__WEBPACK_IMPORTED_MODULE_13__","title","items","name","path","isActive","_hoc_Aux__WEBPACK_IMPORTED_MODULE_16__","_Comprobante__WEBPACK_IMPORTED_MODULE_19__","monto","onCancel","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","style","width","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","Header","Title","as","Body","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","md","Group","controlId","Label","Control","disabled","Text","className","marginBottom","type","onChange","lang","Check","custom","label","checked","textAlign","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","variant","react_bootstrap__WEBPACK_IMPORTED_MODULE_11__","animation","size","role","aria-hidden","display","_App_components_UcFirst__WEBPACK_IMPORTED_MODULE_15__","text","_App_components_ErrorSection__WEBPACK_IMPORTED_MODULE_14__"],"mappings":"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","file":"static/js/12.d8122306.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Card, Col, Form, Row, Spinner } from 'react-bootstrap';\r\nimport { useHistory, useRouteMatch } from 'react-router-dom';\r\nimport Breadcrumb from '../../App/components/Breadcrumb';\r\nimport ErrorSection from '../../App/components/ErrorSection';\r\nimport UcFirst from '../../App/components/UcFirst';\r\nimport Aux from '../../hoc/_Aux';\r\nimport { CuentaModel } from '../../models/CuentaModel';\r\nimport { TransferenciaModelo } from '../../models/TransferenciaModel';\r\nimport cuentasService from '../../services/cuentasService';\r\nimport { moneyFormat } from '../../utils';\r\nimport Comprobante from './Comprobante';\r\n\r\nconst Expreso = () => {\r\n    const history = useHistory();\r\n    const match = useRouteMatch();\r\n    const { id }: any = match.params;\r\n\r\n    const [agree, setAgree] = useState<boolean>(false);\r\n    const [errors, setErrors] = useState<string[]>([]);\r\n    const [loading, setLoading] = useState<boolean>(false);\r\n    const [comprobanteActivado, setComprobanteActivado] = useState<boolean>(false);\r\n    const [miCuenta, setMiCuenta] = useState<CuentaModel>({} as CuentaModel);\r\n    const [cuentaDestino, setCuentaDestino] = useState<CuentaModel>({} as CuentaModel);\r\n\r\n    const [formModel, setFormModel] = useState<TransferenciaModelo>({\r\n        Monto: 0,\r\n        CuentaDestino: '',\r\n        Cuenta: id\r\n    } as TransferenciaModelo);\r\n\r\n\r\n    useEffect(() => {\r\n        cuentasService.obtener(id)\r\n            .then((data) => {\r\n                setMiCuenta(data);\r\n            })\r\n            .catch((data) => {\r\n                history.push('/cuentas');\r\n            });\r\n    }, []);\r\n\r\n    const handleInputChange = ({ target }: any) => {\r\n        setFormModel(prev => ({ ...prev, [target.id]: target.value }));\r\n    };\r\n\r\n    const onSubmit = async (e: any) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        let errorsList: string[] = [];\r\n\r\n        if (!formModel.CuentaDestino)\r\n            errorsList.push('Debe seleccionar una cuenta a la cual transferir');\r\n        else {\r\n\r\n            if (miCuenta.NoCuenta === formModel.CuentaDestino)\r\n                errorsList.push('No puedes transferir a tu misma cuenta');\r\n            else {\r\n                await cuentasService.obtener(formModel.CuentaDestino)\r\n                    .then((data) => {\r\n                        setCuentaDestino(data);\r\n                    })\r\n                    .catch((data) => {\r\n                        errorsList.push('La cuenta a la que desea transferir no existe');\r\n                    });\r\n            }\r\n        }\r\n        if (!formModel.Monto)\r\n            errorsList.push('Debe seleccionar un monto a transferir');\r\n\r\n        if (miCuenta.Monto < formModel.Monto)\r\n            errorsList.push(`El monto que desea transferir no esta disponible (${moneyFormat(parseFloat(formModel.Monto.toString()))})`);\r\n\r\n        setErrors(errorsList);\r\n\r\n        setTimeout(() => {\r\n            setLoading(false)\r\n            if (errorsList.length === 0) {\r\n                setComprobanteActivado(true);\r\n            }\r\n        }, 1000);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Breadcrumb\r\n                title={`Transferencia expreso`}\r\n                items={[{\r\n                    name: 'Cuentas',\r\n                    path: '/cuentas',\r\n                    isActive: false\r\n                }, {\r\n                    name: `Cuenta No. ${id}`,\r\n                    path: `/cuentas/${id}`,\r\n                    isActive: false\r\n                }, {\r\n                    name: `Transferencia expreso`,\r\n                    path: `/cuentas/${id}/expreso`,\r\n                    isActive: true\r\n                }]}\r\n            />\r\n            <Aux>\r\n                {!comprobanteActivado ? (\r\n                    <Row>\r\n                        <Card style={{ width: '100%' }}>\r\n                            <Form onSubmit={onSubmit}>\r\n                                <Card.Header>\r\n                                    <Card.Title as=\"h5\">Datos de transferencia</Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                    <Row>\r\n                                        <Col md={6}>\r\n                                            <h5>Información de mi cuenta</h5>\r\n                                            <hr />\r\n                                            <Form.Group controlId=\"NoCuenta\">\r\n                                                <Form.Label>Mi Cuenta</Form.Label>\r\n                                                <Form.Control value={`Cuenta No. ${miCuenta.NoCuenta}`} disabled />\r\n                                                <Form.Text className=\"text-muted\">\r\n                                                    <b>Atención:</b> La información de la cuenta no debe ser compartida.\r\n                                                </Form.Text>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"Balance\">\r\n                                                <Form.Label>Balance Actual</Form.Label>\r\n                                                <Form.Control value={`${moneyFormat(miCuenta.Monto)}`} disabled />\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <h5>Información de cuenta destino</h5>\r\n                                            <hr />\r\n                                            <Form.Group controlId=\"CuentaDestino\" style={{ marginBottom: '2.2rem' }}>\r\n                                                <Form.Label>Cuenta a Transferir</Form.Label>\r\n                                                <Form.Control type=\"number\" onChange={handleInputChange} value={formModel.CuentaDestino} />\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"Monto\">\r\n                                                <Form.Label>Monto a transferir</Form.Label>\r\n                                                <Form.Control lang=\"en\" type=\"number\" onChange={handleInputChange} value={formModel.Monto.toString()} />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Check\r\n                                                    custom\r\n                                                    type=\"checkbox\"\r\n                                                    id=\"agree\"\r\n                                                    label=\"(Si, estoy de acuerdo) La transferencia se efectuara por un costo de 0.15%\"\r\n                                                    checked={agree}\r\n                                                    onChange={() => setAgree(prev => !prev)}\r\n                                                />\r\n                                            </Form.Group>\r\n                                            <Form.Group style={{ textAlign: 'right' }}>\r\n                                                <Button type=\"submit\" variant=\"secondary\" disabled={!agree || loading}>\r\n                                                    <Spinner\r\n                                                        as=\"span\"\r\n                                                        animation=\"border\"\r\n                                                        size=\"sm\"\r\n                                                        role=\"status\"\r\n                                                        aria-hidden=\"true\"\r\n                                                        style={{display: (loading)? 'inline-block' : 'none'}}\r\n                                                    />\r\n                                                    <UcFirst text={(loading) ? \" Validando.. \" : \"Realizar transferencia\"} />\r\n                                                </Button>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={12}>\r\n                                            <ErrorSection errors={errors} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Form>\r\n                        </Card>\r\n\r\n                    </Row>\r\n                ) : (\r\n                        <Comprobante\r\n                            miCuenta={miCuenta}\r\n                            cuentaDestino={cuentaDestino}\r\n                            monto={parseFloat(formModel.Monto.toString())}\r\n                            onCancel={() => setComprobanteActivado(false)}\r\n                        />\r\n                    )}\r\n            </Aux>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Expreso;"],"sourceRoot":""}